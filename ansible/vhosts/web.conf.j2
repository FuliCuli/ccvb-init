server {
    listen {{ site_port_redirect }}{% if current.ssl == false %} ssl{% endif %};

    server_name {{ current.domain }}{% if current.alternative_domain is defined %}{% for value in current.alternative_domain.items() %} {{ value }}{% endfor %}{% endif %};
    return 301 {{ site_protocol_use }}{{ current.domain }}$request_uri;
}

server {
{% if current.ssl == true %}
    listen {{ site_port_use }} ssl spdy;
    ssl on;
    keepalive_timeout   {{ current.ssl.timeout | default(70) }};
    ssl_certificate      {{ website.directory.ssl.cert }}{{ current.ssl.cert }};
    ssl_certificate_key  {{ website.directory.ssl.key }}{{ current.ssl.key }};
    {% if current.ssl.trusted %}ssl_trusted_certificate {{ website.directory.ssl.key }}{{ current.ssl.trusted }};{% endif %}

    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    #ssl_ciphers "AES256+EECDH:AES256+EDH:!aNULL";

    ssl_prefer_server_ciphers   on;
    #ssl_dhparam /etc/ssl/certs/dhparam.pem;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

{% else %}
    listen {{ site_port_use }};
{% endif %}

    server_name {{ current.domain }};

{% if current.restrict is defined %}
{% for value in current.restrict %}
    allow {{ value }};
{% endfor %}
    deny all;
{% endif %}

    set $version 'release';
    if ($http_x_version) {
        set $version $http_x_version;
    }

    root   {{ site_directory_root }}/$version;

    charset utf-8;

    # Logging
{% if env != 'prod' %}
    access_log  /var/log/nginx/{{ current.domain }}.access.log;
    error_log  /var/log/nginx/{{ current.domain }}.error.log debug;
{% else %}
    access_log  /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log warn;
{% endif %}

    # serve static files directly
    location ~ ^/(scripts.*js|styles|images) {
        access_log off;
        gzip_static on;
        expires 7d;
        add_header Cache-Control public;
        add_header ETag "";
    }

    location / {
        try_files $uri /index.html;
    }

    location ~ /\.  {
        return 403; 
    }
}